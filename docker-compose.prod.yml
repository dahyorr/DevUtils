version: '3.8'

services:
    proxy-server:
        build: 
            context: ./frontend
            dockerfile: Dockerfile
            target: production
        ports:
            - '80:80'
        networks:
            - main-net
        volumes:
            - ./nginx.conf:/etc/nginx/conf.d/default.conf
        depends_on: 
            - backend
        restart: always

    backend:
        build: 
            context: ./backend
            dockerfile: Dockerfile
            target: production
        volumes:
            - 'file-pool:/uploads'
        env_file:
            - .env
        networks:
            - message_pipeline
            - main-net
        depends_on: 
            - cache
            - rabbitmq
        restart: always

    worker:
        build: ./worker
        volumes:
            - 'file-pool:/uploads'
        depends_on:
            - rabbitmq
            - cache
        networks:
            - message_pipeline
        env_file:
            - .env

    rabbitmq:
        image: rabbitmq:3.9-management-alpine
        hostname: 'rabbit-hole'
        env_file:
            - .env
        networks:
            - message_pipeline
        restart: always

    cache:
        image: 'redis:6.2.6-alpine'
        hostname: redis-cache
        networks:
            - message_pipeline
        volumes:
            - redis-data:/data
        restart: always

volumes:
    file-pool:
    redis-data:

networks:
    message_pipeline:
    main-net:
